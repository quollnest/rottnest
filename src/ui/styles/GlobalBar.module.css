.globalBar {
  display: flex;
  background: linear-gradient(to bottom, #2d2b26 0%, #25231f 100%);
  width: 100%;
  border-bottom: 1px #35332f solid;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  user-select: none;
  overflow: hidden; /* Prevent overflow */
}

.barItemList {
  display: flex;
  width: 100%;
  padding: 0;
  margin: 0;
  list-style-type: none;
  flex-wrap: nowrap; /* Prevent wrapping */
}

.hiddenFile {
  position: absolute;
  opacity: 0;
  float: right;
  width: 30px;
  height: 100%;
  cursor: pointer;
}

/* Base style for all bar items */
.barItem {
  display: flex;
  padding: 0;
  min-width: 20px; /* Reduced from 60px to allow more space */
  color: #b3b3b3;
  cursor: pointer;
  position: relative;
  transition: background-color 0.2s, color 0.2s;
  align-items: center;
  justify-content: center;
  flex-shrink: 1;
  overflow: hidden;
}

.barItem:hover {
  background-color: #35332f;
  color: #ffffff;
}

.barItem:active {
  background-color: #1e1c18;
  color: #ffffff;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

/* Content wrapper for icon and text alignment */
.barItemContent {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px 5px; /* Reduced horizontal padding */
  width: 100%;
  height: 100%;
  overflow: hidden; /* Hide overflow content */
}

/* Icon styling */
.barItemIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 4px;
  font-size: 16px;
  flex-shrink: 0; /* Don't allow icons to shrink */
}

/* Text styling */
.barItemText {
  font-size: 12px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Show ellipsis for text overflow */
  transition: opacity 0.2s ease;
}

/* Logo styling */
.containerLogo {
  flex: 0.8 !important; /* Reduced from 1 */
  border-right: 1px #35332f solid;
  min-width: 60px !important; /* Reduced from 80px */
  font-weight: bold;
  color: #d4d4d4;
  background-color: #201e1a;
  flex-shrink: 0; /* Don't allow logo to shrink */
}

.containerLogo:hover {
  background-color: #252320;
}

/* Zoom controls */
.zoomIn, .zoomOut, .zoomValue {
  flex: 0.2 !important;
  min-width: 30px; /* Ensure minimum width */
}

.zoomValue {
  justify-content: center;
  background-color: transparent;
  cursor: default;
  color: #d4d4d4;
}

.zoomValue:hover {
  background-color: transparent;
}

/* Undo and redo buttons */
.undo, .redo {
  flex: 0.4 !important; /* Reduced from 0.5 */
  min-width: 40px; /* Set minimum width */
}

.undo {
  border-left: 1px #35332f solid;
}

/* Separator - give it high priority to shrink first */
.separator {
  flex: 2 !important;
  border-left: 1px #35332f solid;
  cursor: default;
  background-color: transparent;
  flex-shrink: 3; 
  min-width: 10px; 
}

.separator:hover {
  background-color: transparent;
}

/* Action buttons */
.save, .load, .settings, .newProject, .help, .run, .reconnect {
  flex: 0.5 !important;
  min-width: 40px; /* Set minimum width */
}

.save, .newProject {
  border-left: 1px #35332f solid;
}

/* Run button with special styling */
.run {
  color: #9fde74;
}

.run:hover {
  color: #b8ff8a;
}

/* Reconnect button with special styling */
.reconnect {
  color: #74a0de;
}

.reconnect:hover {
  color: #8ab6f5;
}

/* Connection status states */
.connected {
  color: #77cc66;
}

.connected:hover {
  color: #8ce079;
}

.disconnected {
  color: #cc6666;
}

.disconnected:hover {
  color: #e07979;
}

.connecting {
  color: #e0a033;
}

.connecting:hover {
  color: #f5b444;
}

/* Spinning animation for the connecting state */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.spinning {
  animation: spin 1.5s linear infinite;
  display: inline-block;
}

/* Settings button */
.settings {
  justify-content: flex-end;
}

/* Help button */
.help {
  flex: 0.5 !important;
}

/* Responsive text hiding for small screens */
@media (max-width: 800px) {
  .barItem .barItemText {
    opacity: 0;
    width: 0;
    margin: 0;
  }
  
  .barItemContent {
    padding: 10px 3px;
  }
  
  .barItem {
    min-width: 24px;
  }
}

/* Tooltip enhancement for when text is hidden */
.barItem:hover::after {
  content: attr(title);
  position: absolute;
  bottom: -30px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #1a1a1a;
  color: white;
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 100;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  opacity: 0;
  transition: opacity 0.2s;
  pointer-events: none;
}

.barItem:hover:hover::after {
  opacity: 1;
}
